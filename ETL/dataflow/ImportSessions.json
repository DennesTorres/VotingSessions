{
	"name": "ImportSessions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sessionsfile",
						"type": "DatasetReference"
					},
					"name": "SessionsSource"
				},
				{
					"dataset": {
						"referenceName": "SessionsDestination",
						"type": "DatasetReference"
					},
					"name": "SessionsDestination"
				},
				{
					"dataset": {
						"referenceName": "SpeakersDestination",
						"type": "DatasetReference"
					},
					"name": "SpeakersDestination"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SessionsDestination",
						"type": "DatasetReference"
					},
					"name": "Saving"
				}
			],
			"transformations": [
				{
					"name": "SessionExists"
				},
				{
					"name": "FindSpeakerId"
				},
				{
					"name": "Conference"
				}
			],
			"script": "parameters{\n\tEventId as string\n}\nsource(output(\n\t\tId as integer,\n\t\ttitle as string,\n\t\tdescription as string,\n\t\tSpeakerId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SessionsSource\nsource(output(\n\t\tId as integer,\n\t\ttitle as string,\n\t\tdescription as string,\n\t\tSpeakerId as integer,\n\t\tConferenceId as integer,\n\t\tOriginalId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SessionsDestination\nsource(output(\n\t\tId as integer,\n\t\tCode as string,\n\t\tName as string,\n\t\tTagLine as string,\n\t\tProfilePicture as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SpeakersDestination\nSessionsSource, SessionsDestination exists(SessionsSource@Id == OriginalId,\n\tnegate:true,\n\tbroadcast: 'auto')~> SessionExists\nSessionExists, SpeakersDestination lookup(SpeakerId == Code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> FindSpeakerId\nFindSpeakerId derive(ConferenceId = $EventId) ~> Conference\nConference sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\ttitle,\n\t\tdescription,\n\t\tSpeakerId,\n\t\tConferenceId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Saving"
		}
	}
}